--- 0.Books and Websites: ---
	https://docs.python.org/3/tutorial/
	Invent with python(games)
	Dive into Python3
	Python challenge(http://www.pythonchallenge.com/)
	Building Machine Learning Systems with Python
	Dive Into Python: Python for Experienced Programmers
	Python Standard Library
--- 1. Links Useful ---
	1.1 python source code search
	http://nullege.com/codes/search/django.utils.text.Truncator
	
Python PEPs
1.Decorators for Functions and Methods
	https://www.python.org/dev/peps/pep-0318/
2.


install python from source code
(http://g0o0o0gle.com/install-python-3-4-1-centos-6/)
wget http://python.org/ftp/python/3.4.1/Python-3.4.1.tar.xz
https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tar.xz
tar xvf Python-3.4.1.tar.xz
cd Python-3.4.1
sudo ./configure --prefix=/usr/local --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib"
sudo make
sudo make altinstall

3.Centos 
tar (child): xz: Cannot exec: No such file or directory
tar (child): Error is not recoverable: exiting now
tar: Child returned status 2
tar: Error is not recoverable: exiting now
Install xz, sudo yum install xz


===============================================
Problems when learning Django Blog Zinnia
===============================================

1. models_bases
===============

Search google and record some founds.

 * 1.1 django.db.models import Q
 
 Q objects are used for complex queries(for example involving AND, OR statements).
 Poll.objects.filter(Q(question_contains='keyword1'))
 Poll.objects.filter(Q(question_contains='keyword1') & Q(question_contains='keyword2'))
 #no logic is the same as and
 Poll.objects.filter(Q(question__contains='dinner'), Q(question__contains='meal'))
 #(A OR B) AND C
 Poll.objects.filter((Q(question__contains='key1') | Q(question__contains='key2')) & Q(pub_date=datetime.date.today()))
 
 * 1.2 django.utils.text import Truncator
 
 trun = Truncator('this may be a such long long text')
 >>> trun.chars(7)
 u'this...'
 >>>trun.chars(7, truncate='--')
 u'this --'
 >>>trun.chars(7, truncate='> %(truncated_text)s...')
 u'> th...'
 
 * 1.3 django.utils.html import strip_tags
 
 Strip HTML tags.
 
 >>>html='<p>paragraph</p>'
 
 >>>stripped = strip_tags(html)
 u'paragraph'
 
 {{ template | striptags }}
 
 * 1.4 django.utils.html import linebreaks
 
 Convert plain text to include html line breaks
 
 * 1.5 django.template.defaultfilters import removetags
 
 html = '<strong>Bold...</strong><p>paragraph....</p>'
 removetags(html, 'strong')
 removetags(html, 'strong p')
 {{ template | removetags:"a span" | safe }}


 
 
 

2014-11-15 python tips
------------------------
pyCon many python tips
1. pragmatic unicode(http://nedbatchelder.com/text/unipain.html)
2.	How to debug python structure like "ptype structName" in gdb c++??
	The python's inspect module(2.7).



--------------------------
	Python basic
--------------------------
1. How to raise an exception in python?(http://stackoverflow.com/questions/2052390/manually-raising-throwing-an-exception-in-python)
	raise Exception("I know python!!")
	
	Use the most specific Exception constructor that semantically fits your issue. Be specific in your message.
    raise ValueError('A very specific bad thing happened')
	
	Avoid raising a generic Exception, to catch it, you'll have to catch all other more specific exceptions that subclass it:
    raise Exception('I know Python!') # don't, if you catch, likely to hide bugs.

2. matches = re.findall(r'balabala', text)
	",".join(matches)
	
3. Find the nth occurrence of substring in a string, like mystring.find("substr", 2nd)
	
	---3.1 Bad for large string manipluate
	def findnth(string, needle, n):
		parts = string.split(needle, n+1)
		if len(parts) <= n+1:
			return -1
		return len(string) - len(parts[-1]) - len(needle)	
		
	def findnth(string, needle, n):
		start = string.find(needle)
		while start>=0 and n>1:
			start = string.find(needle, start+len(needle))# for overlapped strings, change len(needle) to 1
			n -= 1
		return start	

4. substring a string in Python
	>>> x = "hello python!"	
	>>> x[2:]
	'llo Python!'
	>>> x[:2]
	'he'
	>>> x[:-2]
	'hello pytho'
	>>> x[-2:]
	'n!'
	>>> x[2:-2]
	'llo pytho'
5. reverse a string 
	some_string[::-1](the third parameter to an array slice is a step)	
	
	reverse a list(逆序，翻转list)
	>>>list = [1,2,3,4]
	>>>list[::-1]
	
	for i in reversed(list):
		print i
	list(reversed(list))
	
6. Permanently add a directory to PYTHONPATH
	确保该目录下有_init.py文件
	export PYTHONPATH=$PYTHONPATH:/usr/temp/pythonPath
	
7. use subprocess to get the result of a bash script
	import subprocess
	proc = subprocess.Popen(['ls', '-a'], stdout=subprocess.PIPE)
	out, err = proc.communicate()
	print(out)
	
	def mygrep(grepStr):
		proc = subprocess.Popen(["test.sh", grepStr], stdout=subprocess.PIPE)
		result = proc.communicate()
		
	Python 2.7 provides the subprocess.check_output(*popenargs, **kwargs) function.
	subprocess.check_output(["echo", "Hello World!"])
	subprocess.check_output(
    "ls non_existent_file; exit 0",
    stderr=subprocess.STDOUT,
    shell=True)
	
	use subprocess to redirect output to a file
	with open(fileName, 'w') as saveFile:
		subprocess.call(cmd, stdout=saveFile)

8. How to put a time delay in a Python script?
	import time
	time.sleep(5)	
	
9.	Get dictionary sorted by key
	sorted_key=sorted(dicts.keys())

10.	How to exit a Python script?
	exit(1)

11.	How to tranverse all the files in Specific directory??
	import os
	import glob
	for root,dirs, filenames in os.walk(specific_dir):
		for filename in glob.glob(root + "*.xml"):
			self.file_list.append(os.path.join(root, filename))
        
    os.walk without hidden folders and files:
    for root, dirs, files in os.walk(path, topdown=True):
        files = [f for f in files if not f[0] == '.']
        dirs[:] = [d for d in dirs if not d[0] == '.']
        # use files and dirs
			
12.	How to do "rm -rf" in Python?
	import shutil
	shutil.rmtree("path_to_remove")
	
13.	get time stamp in python
	int(time.time())
	
14.	python command line yes/no input
import sys
def query_yes_no(question, default="yes"):
    """Ask a yes/no question via raw_input() and return their answer.

    "question" is a string that is presented to the user.
    "default" is the presumed answer if the user just hits <Enter>.
        It must be "yes" (the default), "no" or None (meaning
        an answer is required of the user).

    The "answer" return value is True for "yes" or False for "no".
    """
    valid = {"yes": True, "y": True, "ye": True,
             "no": False, "n": False}
    if default is None:
        prompt = " [y/n] "
    elif default == "yes":
        prompt = " [Y/n] "
    elif default == "no":
        prompt = " [y/N] "
    else:
        raise ValueError("invalid default answer: '%s'" % default)

    while True:
        sys.stdout.write(question + prompt)
        choice = input().lower()
        if default is not None and choice == '':
            return valid[default]
        elif choice in valid:
            return valid[choice]
        else:
            sys.stdout.write("Please respond with 'yes' or 'no' "
                             "(or 'y' or 'n').\n")
	
15.	python3 
	directory\
		file_a.py
			
		file_b.py
		
		
16.	with open('aa.txt', 'r') as file:
		content = file.read()
		
17. regex recursion in regular expressions
	
18.	python shutil move no such file or directory
	shutil.copyfile(fromPath, toPath)
	
	python move one file to another
	shutil.move('common/a.txt', 'b.txt')
	
19.	How to check if file exists in Python ??
	if os.path.exists("C:\AAA\BBB.txt"):
		os.remove(file_name)
		# remove an empty directory
		os.rmdir(dir_name)
		# delete a directory and all its contents
		shutil.rmtree(dir_name)
        
    How to check if directory exists in Python?
    os.path.isdir(dirName)
		
20.	在TableMake 目录下添加了debug.py代码如下
	def debug_line(*objs):
		with open('temp_debug_log', 'a') as f:
			f.write(str(objs))
	发现python 没有输出到文件，但是单个测试就会输出文件
	在TableMake目录下test.py中添加debug_line函数， python test.py 可以输出temp_bug_log文件
	在/home/userName 目录下 python tools/TableMake/command.py 发现 TableMake 目录下没有temp_bug_log文件，其实是在/home/userName 目录
	总结：以后输出到文件，思考用绝对路径，还是相对路径
	
21. python conditional breakpoints
    pdb filename.py
	b 9
	Breakpoint 2 at ...
	ignore 1 1000
	Will ignore next 1000 crossings of breakpoint 1.
	c
	
	======
	break 9, j > 0
	break
	Num Type         Disp Enb   Where
	1   breakpoint   keep yes   at .../pdb_break.py:9
			stop only if j>0
			
	======
	b 9
	Breakpoint 1 at .../pdb_break.py:9
	condition 1 j > 0

22. python3 print encoding
    An alternative solution to those already suggested is to set the PYTHONIOENCODING environment variable before Python starts, 
	for my use - this is less trouble then swapping sys.stdout after Python is initialized:
    PYTHONIOENCODING=utf-8:surrogateescape python3 somescript.py
	
	===
	set sys.stdout encoding in Python2
	sys.stdout = codecs.getwriter("utf-8")(sys.stdout)
	
23. python requests get raw content
    r = requests.get('http://aaa.com', stream = True)
	r.raw.read(10)
	#Get the whole raw data
	r.raw.data
	
24. python BeautifulSoup encodings
    http://www.crummy.com/software/BeautifulSoup/bs4/doc/
    Unicode, Dammit guesses correctly most of the time, but sometimes it makes mistakes. Sometimes it guesses correctly, but only after a byte-by-byte search of the document that takes a very long time. If you happen to know a document’s encoding ahead of time, you can avoid mistakes and delays by passing it to the BeautifulSoup constructor as from_encoding.
	soup = BeautifulSoup(request.raw.data, 'html.parser', from_encoding='windows-1252')
	
25. python url encode
    import urllib.parse
	d = {'page' : '10', 'name' : '七彩'}
	urllib.parse.urlencode(d)
	page=10&name=%C6%DF%B2%CA
	
	中日韩汉字Unicode编码表
	http://www.chi2ko.com/tool/CJK.htm
	
    地址栏 带中文的网址显示百分号
	www.baidu.com/q=%C6%DF%B2%CA
	其实去掉百分号,从左到右,两两组成十六进制数,通常是 utf-8 编码(2,3,4个十六进制数)或者 GB2312 编码(2个十六进制数)
	python3 -c "import urllib.request;print(urllib.request.quote('七彩', encoding='gb2312'))"
	urllib.request.unquote('七彩', encoding='gb2312')
	
26. python downlaod file to disk
    url = urllib.request.URLopener()
	url.retrieve('http://randomsite.com/file.gz',  'file.gz')
	
27. python requests urlencode (do not encode Chinese characters)
    There are many times that you want to send data that is not form-encoded. If you pass in a string instead of a dict, that data will be posted directly.
	
28. How to parse XML with encoding 
    >>>import xml.etree.ElementTree as ET
	>>>f = open('a.xml','r')
	>>>ef = ET.fromstring(f.read())
	
	import xml.etree.ElementTree as ET
    xmlp = ET.XMLParser(encoding="utf-8")
    f = ET.parse('a.xml',parser=xmlp)
    
    How to create a simple xml??
    import xml.etree.cElementTree as ET
    root = ET.Element("root")
    doc = ET.SubElement(root, "doc")    
    ET.SubElement(doc, "field1", name="blah").text = "some value1"
    ET.SubElement(doc, "field2", name="asdfasd").text = "some vlaue2"    
    tree = ET.ElementTree(root)
    tree.write("filename.xml")
	
29. requests ssl certificate_verify_failed
    add 'verify = False' to post method
    r = login_session.post(login_url, data = login_str, headers=login_header)
	
30. python set a custom boundary requests
    # dict,(key, value) 分别是form.submit()时候提交的<input>节点的(name, value)
def make_content_with_boundary(dict):
    boundary = '---------------------------2328902828628'
    CRLF = '\r\n'
    l = []
    for (k, v) in dict:
        l.append('--' + boundary)
        l.append('Content-Disposition: form-data; name="%s"' % k)
        l.append('')
        l.append(v)
    l.append('--' + boundary + '--')
    content = CRLF.join(l)
    return content
    
    iterate dictionaries
    Python 3.x
    for k,v in d.items():
    
    Python 2.x
    for k,v in d.iteritems():
	
31. python json serialize
    (http://kaira.sgo.fi/2014/05/saving-and-loading-data-in-python-with.html)
	
32. Constantly print subprocess stdout to screen(python subprocess stdout to screen)
    proc = subprocess.Popen(cmd, shell=True, stdout = subprocess.PIPE, stderr = subprocess.PIPE)
	
	# Method 1
	lines_iterator = iter(proc.stdout.readline, '')
	for line in lines_iterator:
	  sys.stdout.write(line)
	  sys.stdout.flush()
	  
	# Method 2
	while True:
	  nextline = proc.stdout.readline()
	  if nextline == '' and proc.poll() != None:
	    break
	  sys.stdout.write(line)
	  sys.stdout.flush()
	  
33. Intercepting stdout of a subprocess while it is running

    class FlushFile(object):
    """Write-only flushing wrapper for file-type objects."""
    def __init__(self, f):
        self.f = f
    def write(self, x):
        self.f.write(x)
        self.f.flush()

	# Replace stdout with an automatically flushing version
	sys.stdout = FlushFile(sys.__stdout__)
    
34. hex to binary
    "{0:020b}".format(int("ABCD", 16))
    
    binary to hex 
    bstr = "111100001111"
    hstr = '%0*X' % ((len(bstr) + 3) // 4, int(bstr, 2))
    
35. ./test.py
    : No such file or directory
    (google keyword : python carriage return no such file or directory)
    ：没有那个文件或目录3
    (http://askubuntu.com/questions/372672/what-could-cause-a-script-to-fail-to-find-python-when-it-has-usr-bin-env-pyt)
    Your shebang line has a carriage return at the end, presumably because it was edited under Windows (which uses CR,LF as a line separator). The CR character causes the cursor to move back to the beginning of the line after the shell prints the beginning of the message and so you only get to see the part after CR which ends the interpreter string that's part of the error message.
    
    dos2unix test.py
    
36. How to open two consoles from a single script?
    import subprocess
    proc = subclass.Popen("svn up Data", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, creationflags=subprocess.CREATE_NEW_CONSOLE)
    proc1 = subclass.Popen("svn up Source", shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, creationflags=subprocess.CREATE_NEW_CONSOLE)
    
37. How to double click to execute Python scripts?
    (Simplest way : install python.xxx.amd64.msi, everything is OK)
    assoc .py
    ftype Python.File
    set HKEY_CLASSES_ROOT\Applications\python26.exe\shell\open\command to "C:\Python26\python26.exe" "%1" %*
    set HKEY_CLASSES_ROOT\py_auto_file\shell\open\command to the same value.
    
38.  pass string arguments to python thread
    dRecieved = connFile.readline();
    processThread = threading.Thread(target=processLine, args=(dRecieved,)); # <- note extra ','
    #processThread = threading.Thread(target=processLine, args=[dRecieved]); # <- 1 element list
    processThread.start();
    
    If you notice, from the stack trace: self.__target(*self.__args, **self.__kwargs)
    The *self.__args turns your string into a list of characters, passing them to the processLine function. If you pass it a one element list, it will pass that element as the first argument - in your case, the string.

--------------------------	
	python errors handle
--------------------------	
1. UnicodeDecodeError: 'utf8' codec can't decode bytes in position 1689-1692
	determine which line which character is wrong
	(iso--8859-1)
	
	buf = open('filename', 'rb').read()
	len(buf)
	ubuf = buf.decode('utf8')
	buf[50:60]
2. catch all errors
	import sys
	try:
		untrusted.execute()
	except:#catch all exceptions
		e = sys.exc_info()[0]
		print(str(e))
3. encoding problem: with BOM		
	#coding='Unicode'
	....
	
	change the coding to utf8. 改变文件头的coding

4. OSError: [Errno 8] Exec format error, when using subprocess.Popen(["~/bashScript.sh", "grepContent"], stdout=subprocess.PIPE)
	subprocess.Popen(['bash','my_script.sh'])

5.	IndentationError: unindent does not match any outer indentation level
	Spaces are mixed with tabs.(:%s#        #\t\t#,replace eight spaces with two tabs)
	(or using "python -m tabnanny yourfile.py" to check)
	("#!/usr/bin/python -tt" at the beginning of the code)
	It is recommended that you don't use tabs in Python code.
	
	
--------------------------------
1. Illegal mix of collations (latin1_swedish_ci,IMPLICIT) and (utf8_general_ci,COERCIBLE) for operation '='
	(Illegal mix of collations MySql Error)
	SET collation_connection = 'utf8_general_ci'
	ALTER DATABASE db CHARACTER SET utf8 COLLATE utf8_general_ci
	ALTER TABLE table CONVERT TO CHARACTER SET utf8 COLLATE utf8_general_ci
	
----------------------------------
errors met when using python mysql connector
0. an example
	# coding=<gbk>
	import mysql.connector
	conn = mysql.connector.connect(user='', passwd='', db='', host='',port='',encoding='latin1')
	cur = conn.cursor()
	cur.execute('SELECT * FROM tableName where name like \"张三\"')
	list=cur.fetchall()
	#deal with list
	cur.execute(
		'insert into tableName(name,date,id) select ' + '\"张三\",' + '20141118, max(id)+1 from tableName'
		)
	cur.commit()
	conn.close()	
	
1.SyntaxError : Non-ASCII character '\..' in file ... but no encoding declared; see see http://www.python.org/peps/pep-0263.html for details
	错误语句(str='select * from tableName where name=小新')
	解决方法：参照网址中的方法，在文件头
	To define a source code encoding, a magic comment must be placed into the source files,
	either as first or second line in the file, such as:
	# coding=<encoding name>
	
	#!/usr/bin/python
    # -*- coding: <encoding name> -*-

	#!/usr/bin/python
    # vim: set fileencoding=<encoding name> :
	
	
2.python connector 查询条件中带汉字,结果为0;查询结果中没有汉字,一切返回正常,改一下，连接数据库的编码
	conn = mysql.connector.connect(host='0.0.0.0', ..., charset='latin1')

3.在这之后，latin-1 codec can't encode characters in position ..., ordinal not in range(256)
	mysql = 'select * from tableName where columnName=' + '\"' + keyword + '\"'
	conn.cursor().execute(mysql.encode('gbk'))
	问题解决

4. TypeError: can't write str to text stream
	Change fout=io.open('filename', 'a')	-->fout = open('test.txt','a'),or, fout = io.open('test.txt','ab')

5. fout = open('log.txt', 'a')	
	sys.stdout = fout
	fout.close()
	
	发现log.txt文件中汉字是乱码
	file -bi log.txt
	text/plain; chraset=unknown
	
	解决方法：
	vim log.txt; 随便写2行，保存，再file -bi log.txt; text/plain; charset=us-ascii,在写日志，汉字正常
	
6. 	redirect print output to a file using python
	fout = open('out.txt', 'a')
	print >> fout, 'Filename:',filename( f.write('...\n') )
	
	origin_stdout = sys.stdout
	sys.stdout = fout
	print('now this sentence is written to files')
	sys.stdout = origin_stdout
	fout.close()
	
7. write utf-8 file with bom in python(https://docs.python.org/2/library/codecs.html#module-encodings.utf_8_sig
	fout = open('out.txt', 'w')
	fout.write(codecs.BOM_UTF8)
	fout.close()
	
	file = codecs.open('out.txt', 'w', 'utf8-sig')
	file.write("hi dad\n")
	file.write(u"This has bom")
	
8. check if an insert was successfully	
	sql_insert = 'insert into table (column1, column2) values (%s,%s,1)'
	cursor = conn.cursor()
	try:
		affected_count = cursor.execute(sql_insert, (id, filename))
		conn.commit()
		logging.warn("%d", affected_count)
		logging.info("inserted values %d, %s", id, filename)
	except MySQLdb.IntegrityError:
		logging.warn("failed to insert values %d, %s", id, filename)
	finally:
		cursor.close()

9. How to check a string in Python is in ascii??
	A string in Python has no property corresponding to 'ascii', utf8, or any other encoding.
	所以问题这样问，Is this string the result of encoding a unicode string in ascii??
	try:
		mystring.decode('ascii')
	except UnicodeDecodeError:
		print "it was not a ascii-encoded Unicode string"	
		
		
10. replace string A in file with string b in a file
	with open("out.txt", "wt") as fout:
    with open("Stud.txt", "rt") as fin:
        for line in fin:
            fout.write(line.replace('A', 'Orange'))	

11.	Read a tab seperated file using python
	import csv
	with open(filename, 'r') as f:
		rows = csv.reader(f, delimiter='\t')
		for row in rows:
			print row

12.	Read binary file in python
	with open(filename, 'rb') as file:
		byte = file.read(1)
		while byte:
			byte = file.read(1)
13.	Convert bytes to string
	b"abcde".decode("utf-8")
	
	string to bytes
	bytearray(str, encoding="utf-8")
	
	Convert hex string to bytes str:
	>>> a = 'e4ec8f7c'
	>>> a_array = [ e4 ec 8f 7c]
	>>> bytes(a_array)
	>>> bytes([255])
	b'\xff'
	
	hexadecimal string to byte array
	python3
	>>>bytearray.fromhex("de ad be ef 00")
	python2
	>>> hex_data = hex_string.decode("hex")
    
    x = int("deadbeef", 16)
    >>> print int("0xdeadbeef", 0)
    3735928559
    >>> print int("10", 0)
    10

14.	os.mkdir(path[,mode])#default mode is 0o777
	os.makedirs(path[,model])#default mode is Oo777
	
15.	python2 print sys.stderr
	print >> sys.stderr, 'entering function'
	sys.stderr.write('spam\n')
	
16. python2 and python3 print stderr
	from __future__ import print_function
	def warning(*objs):
		print("WARNING: ", *objs, file=sys.stderr)
		
17.	Parent module '' not loaded, cannot perform relative import
	__init__.py
	file1.py
	file2.py
	
	from .file1 import func1(Do not need dot, from file1 import func1)
	
18. Using requests login to website return 403
client = requests.session()

# Retrieve the CSRF token first
client.get(URL)  # sets the cookie
csrftoken = client.cookies['csrftoken']

login_data = dict(username=EMAIL, password=PASSWORD, csrfmiddlewaretoken=csrftoken)
r = client.post(URL, data=login_data, headers={"Referer": "foo"})

19. How to get the home directory in Python??
	from os.path import expanduser
	home=expanduser("~")
	
20. open file with encoding
def log(*objs):
	with open('aa.txt', 'r', encoding='utf-8') as f:
		print(" ", *objs, file=f)
		
21. How to print bytes in python ?
	b'150601-00:00:00 WS[31] DEBUG: 9710963822678457872,0,Kim Phi\xe1\xba\xbfu,10,10,1,0,-,14220941,mtk22,M\xe1\xbb\xa5c ti\xc3\xaau th\xc6\xb0\xe1\xbb\x9fng Kim Phi\xe1\xba\xbfu,79\n'
	def print_byte(content):
		for x in content:
			print(x)

22. get current file directory Python(Extract a part of the filepath (a directory) in Python)
	import os
	os.path.dirname(os.path.abspath(__file__))
	
23. Print all day-dates between two dates
	from datetime import date, timedelta as td
	d1=date(2008,1,1)
	d2=date(2010,1,1)
	delta = d2-d1
	for i in range(delta.days + 1):
		print d1 + td(days=i)
		
24. python print date format
	>>>d1=datetime.date(2015,6,1)
	>>>print(d1)
	2015-06-01
	>>> print(d1.strftime("%y%m%d"))
	150601
	>>>print "We are the {:%d, %b %Y}".format(today)
	'We are the 01, 06 2008'
	(Since PEP3101, every object can have its own format used automatically by the method format of any string. In the case of the datetime, the format is the same used in strftime. So you can do the same as above like this:)
    
    print '{:10s} {:3d}  {:7.2f}'.format('xxx', 123, 98)
    print '{:10s} {:3d}  {:7.2f}'.format('yyyy', 3, 1.0)
    print '{:10s} {:3d}  {:7.2f}'.format('zz', 42, 123.34)
    
    left space
    >>> '{0:>5}'.format('ss')
    '   ss'
    right space
    >>> '{0:<5}'.format('ss')
    'ss   '

	
25. How to make a Python program running as a daemon??
	
26. How to define enum in Python?
	class LogfileType(object):
		error = 1
		process = 2
		result = 3
27. python debugging show attributes's values
	(pdb) import sys
	(pdb) p sys.__dict__
	
28. check if a key is in a dict
    key in dict
	dict.has_key(key)
    
    remove a key from dictionary
    my_dict.pop("key", None)
    
    def removekey(d, key):
    r = dict(d)
    del r[key]
    return r
    
29. python print stderr and exit
    sys.exit('Error!')
    If another type of object is passed, None is equivalent to passing zero, and any other object is printed to sys.stderr and results in an exit code of 1. 
    In particular, sys.exit("some error message") is a quick way to exit a program when an error occurs.
    
30. python multimap implementation
    >>> from collections import defaultdict
    >>> md = defaultdict(list)
    >>> md[1].append('a')
    >>> md[1].append('b')
    >>> md[2].append('c')
    >>> md[1]
    ['a', 'b']
    >>> md[2]
    ['c']
    >>> for k, v in md.items():
    ...     for w in v:
    ...         print("md[%d] = '%s'" % (k, w))
    
31. How to install BitTorrent?
    1. down source code 
    2. install wxPython (https://wiki.wxpython.org/How%20to%20install%20wxPython)
    sudo apt-get install python-wxgtk3.0
    sudo apt-get install gcc build-essential python-dev  -y
    sudo apt-get install libboost-dev
    wget http://downloads.sourceforge.net/wxpython/wxPython-src-3.0.2.0.tar.bz2
    tar -xf wxPython-src-3.0.2.0.tar.bz2 
    cd wxPython-src-3.0.2.0/wxPython
    mkdir ~/wxpython_build
    python build-wxpython.py --build_dir=/home/giant/wxpython_build/
    
    install boost.build 
    wget https://github.com/boostorg/build/releases/download/2014.10/boost-build-2014-10.tar.bz2
    tar -xf boost-build-2014-10.tar.bz2
    cd boost-build
    ./bootstrap.sh
    sudo ./b2 install 
		
-------------------------------
	Python Built-in functions
-------------------------------		
1. ord(c), return an integer representing the Unicode code point of the character 
when the argument is a unicode object; or the value of the byte when the argument is an 8-bit string.
	ord('a')=97; ord(u'\u2020')=8224
	
-------------------------------
	Python libs
-------------------------------		
1.0	install virtual python on non-ubuntu machine
	python3 -m venv myenvname
1.1	install virtual python on ubuntu 14.04
	sudo apt-get install python3 curl -y
	pyvenv-3.4 --without-pip myvenv
	source ./myvenv/bin/activate
	wget https://pypi.python.org/packages/source/s/setuptools/setuptools-3.4.4.tar.gz
	tar -vzxf setuptools-3.4.4.tar.gz
	cd setuptools-3.4.4
	python setup.py install
	cd ..
	wget https://pypi.python.org/packages/source/p/pip/pip-1.5.6.tar.gz
	tar -vzxf pip-1.5.6.tar.gz
	cd pip-1.5.6
	python setup.py install
	cd ..
	deactivate
	source ./myvenv/bin/activate
1.2 python2.x virtual env
	sudo apt-get install python-virtualenv
	mkdir -p virtual_py2
	virtualenv --python=/usr/bin/python2 virtual_py2
	
1.3	mkdir -p virtual_py3
	virtualenv --python=/usr/bin/python3 virtual_py3

1.4 userNameXXX is not in the sudoers file.  This incident will be reported.
	Open root Terminal, ssh root@xxx.xxx.xxx.xxx
	visudo /etc/sudoers
	under the line "root ALL=(ALL) ALL", add "userNameXXX ALL=(ALL) ALL"
	CTRL + X to Exit and Save the file.
	
2.	pip install packages offline, download tarballs and its dependencies
	(the same when replacing "Django==1.8" with "-r requirements.txt")
	pip install Django==1.8 --download /path/to/some/directory
	pip install Django==1.8 --no-index --find-links /path/to/some/directory
	
3.	install vim with python support
	git clone https://github.com/b4winckler/vim.git vim
	cd vim
	./configure --enable-pythoninterp --with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu
	
4. How to find python config dir??
	sudo updatedb
	locate python|grep '/config'
	
5.	How to install Vundle??
	mkdir -p ~/.vim/bundle
	git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
	
	vim ~/.vimrc, add the following
	set nocompatible              " be iMproved, required
	filetype off                  " required
	
	" set the runtime path to include Vundle and initialize
	set rtp+=~/.vim/bundle/Vundle.vim
	call vundle#begin()
	" alternatively, pass a path where Vundle should install plugins
	"call vundle#begin('~/some/path/here')
	
	" let Vundle manage Vundle, required
	Plugin 'gmarik/Vundle.vim'
	
	" The following are examples of different formats supported.
	" Keep Plugin commands between vundle#begin/end.
	" plugin on GitHub repo
	Plugin 'tpope/vim-fugitive'
	" plugin from http://vim-scripts.org/vim/scripts.html
	Plugin 'L9'
	" Git plugin not hosted on GitHub
	Plugin 'git://git.wincent.com/command-t.git'
	" git repos on your local machine (i.e. when working on your own plugin)
	Plugin 'file:///home/gmarik/path/to/plugin'
	" The sparkup vim script is in a subdirectory of this repo called vim.
	" Pass the path to set the runtimepath properly.
	Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
	" Avoid a name conflict with L9
	Plugin 'user/L9', {'name': 'newL9'}
	
	" All of your Plugins must be added before the following line
	call vundle#end()            " required
	filetype plugin indent on    " required
	" To ignore plugin indent changes, instead use:
	"filetype plugin on
	"
	" Brief help
	" :PluginList       - lists configured plugins
	" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
	" :PluginSearch foo - searches for foo; append `!` to refresh local cache
	" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
	"
	" see :h vundle for more details or wiki for FAQ
	" Put your non-Plugin stuff after this line
	
	vim +PluginInstall +qall
	vim ~/.vimrc, syntax on(add color to vim)
	
6.	How to install YouCompleteMe??
	sudo apt-get install build-essential cmake golang
	git clone https://github.com/Valloric/YouCompleteMe.git ~/.vim/bundle/YouCompleteMe
	cd ~/.vim/bundle/YouCompleteMe
	git submodule update --init --recursive
	./install.py --clang-completer --gocode-completer
	vim ~/.vimrc, Plugin 'file:///home/userName/.vim/bundle/YouCompleteMe'
	
	ubuntu 中文乱码
	记住安装ssh-server,在xshell或者sevure CRT中打开,并且export LANG=zh_CN.GBK
	
7.  vim Indent with tabs, align with spaces
    "gg=G" indent all code blocks
    Press "V=" indent a block of code
    echo "set shiftwidth=4" >> ~/.vimrc  (Control the shift width when indent)
	
	
-------------------------------
Install epydoc(python class diagram)
http://epydoc.sourceforge.net/
-------------------------------


-------------------------------
Scrape webpages(using Scrapy)
source virtual_py2/bin/active
sudo apt-get install openssl openssl-dev libffi-dev -y(openssl/ssl.h,一般提示缺少.h文件,都要安装-dev的包)
pip install lxml

ImportError: No module named cryptography.hazmat.bindings.openssl.binding
pip install pyOpenSSL==0.13

p tempselector.xpath('/html/body/div/h2/span/a/text()').extract()
p tempselector.xpath('//a/@href').extract()
p tempselector.xpath('/html/body/div/h2/span/span[@class="timestamp"]/text()')
-------------------------------
 web scraping errors
1. sometimes works with some pages, and sometimes, it barfs by throwing a UnicodeEncodeError
	agent_telno = agent.find('div', 'agent_contact_number')
	agent_telno = '' if agent_telno is None else agent_telno.contents[0]
	p.agent_info = str(agent_contact + ' ' + agent_telno).strip()
	
	when you call str(), python uses the default character encoding to try and encode the bytes you gave it, 
	which in your case are sometimes representations of unicode characters.
	
	stop using str to convert from unicode to encoded text / bytes
	p.agent_info = u' '.join((agent_contact, agent_telno)).encode('utf-8').strip()
	
---
mysql connector errors
after install mysql conector, run examples/inserts.py ImportError: cannot import name 'warn'
	sudo examples/inserts.py
